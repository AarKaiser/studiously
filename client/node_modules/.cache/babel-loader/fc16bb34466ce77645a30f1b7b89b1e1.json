{"ast":null,"code":"// route to get logged in user's info (needs the token)\nexport var getMe=function getMe(token){return fetch('/api/users/me',{headers:{'Content-Type':'application/json',authorization:\"Bearer \".concat(token)}});};export var createUser=function createUser(userData){return fetch('/api/users',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});};export var loginUser=function loginUser(userData){return fetch('/api/users/login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(userData)});};// save goal data for a logged in user\nexport var saveGoal=function saveGoal(goalData,token){return fetch('/api/users',{method:'PUT',headers:{'Content-Type':'application/json',authorization:\"Bearer \".concat(token)},body:JSON.stringify(goalData)});};// remove saved goal data for a logged in user\nexport var deleteGoal=function deleteGoal(goalId,token){return fetch(\"/api/users/goals/\".concat(goalId),{method:'DELETE',headers:{authorization:\"Bearer \".concat(token)}});};//   // make a search to google books api\n//   export const searchGoogleBooks = (query) => {\n//     return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//   };","map":{"version":3,"sources":["/Users/aarkaiser/Desktop/Studies/UofT/assignments/23_project3/studiously/client/src/utils/API.js"],"names":["getMe","token","fetch","headers","authorization","createUser","userData","method","body","JSON","stringify","loginUser","saveGoal","goalData","deleteGoal","goalId"],"mappings":"AAAA;AACA,MAAO,IAAMA,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACC,KAAD,CAAW,CAC5B,MAAOC,CAAAA,KAAK,CAAC,eAAD,CAAkB,CAC5BC,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,KAAZ,CAFN,CADmB,CAAlB,CAAZ,CAMD,CAPI,CASL,MAAO,IAAMI,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,QAAD,CAAc,CACtC,MAAOJ,CAAAA,KAAK,CAAC,YAAD,CAAe,CACzBK,MAAM,CAAE,MADiB,CAEzBJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAFgB,CAKzBK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALmB,CAAf,CAAZ,CAOD,CARM,CAUP,MAAO,IAAMK,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACL,QAAD,CAAc,CACrC,MAAOJ,CAAAA,KAAK,CAAC,kBAAD,CAAqB,CAC/BK,MAAM,CAAE,MADuB,CAE/BJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAFsB,CAK/BK,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CALyB,CAArB,CAAZ,CAOD,CARM,CAUP;AACA,MAAO,IAAMM,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,QAAD,CAAWZ,KAAX,CAAqB,CAC3C,MAAOC,CAAAA,KAAK,CAAC,YAAD,CAAe,CACzBK,MAAM,CAAE,KADiB,CAEzBJ,OAAO,CAAE,CACP,eAAgB,kBADT,CAEPC,aAAa,kBAAYH,KAAZ,CAFN,CAFgB,CAMzBO,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeG,QAAf,CANmB,CAAf,CAAZ,CAQD,CATM,CAWP;AACA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACC,MAAD,CAASd,KAAT,CAAmB,CAC3C,MAAOC,CAAAA,KAAK,4BAAqBa,MAArB,EAA+B,CACzCR,MAAM,CAAE,QADiC,CAEzCJ,OAAO,CAAE,CACPC,aAAa,kBAAYH,KAAZ,CADN,CAFgC,CAA/B,CAAZ,CAMD,CAPM,CAST;AACA;AACA;AACA","sourcesContent":["// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n    return fetch('/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \n  export const createUser = (userData) => {\n    return fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  export const loginUser = (userData) => {\n    return fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  // save goal data for a logged in user\n  export const saveGoal = (goalData, token) => {\n    return fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(goalData),\n    });\n  };\n  \n  // remove saved goal data for a logged in user\n  export const deleteGoal = (goalId, token) => {\n    return fetch(`/api/users/goals/${goalId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \n//   // make a search to google books api\n//   export const searchGoogleBooks = (query) => {\n//     return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//   };"]},"metadata":{},"sourceType":"module"}