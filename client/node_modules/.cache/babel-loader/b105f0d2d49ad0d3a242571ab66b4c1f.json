{"ast":null,"code":"// import React, { useState } from 'react';\n// import './LoginSignup.css';\n// import { Form, Button, Alert } from 'react-bootstrap';\n// import { createUser } from \"../../../utils/API\";\n// import Auth from '../../../utils/auth';\n// const LoginSignup = () => {\n//   // set initial form state\n//   const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n//   // set state for form validation\n//   const [validated] = useState(false);\n//   // set state for alert\n//   const [showAlert, setShowAlert] = useState(false);\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setUserFormData({ ...userFormData, [name]: value });\n//   };\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n//     // check if form has everything (as per react-bootstrap docs)\n//     const form = event.currentTarget;\n//     if (form.checkValidity() === false) {\n//       event.preventDefault();\n//       event.stopPropagation();\n//     }\n//     try {\n//       const response = await createUser(userFormData);\n//       if (!response.ok) {\n//         throw new Error('something went wrong!');\n//       }\n//       const { token, user } = await response.json();\n//       console.log(user);\n//       Auth.login(token);\n//     } catch (err) {\n//       console.error(err);\n//       setShowAlert(true);\n//     }\n//     setUserFormData({\n//       email: '',\n//       password: '',\n//     });\n//   };\n// export default function LoginSignup (props) {\n//   return (\n//     <>\n//       {/* This is needed for the validation functionality above */}\n//       <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n//         {/* show alert if server response is bad */}\n//         <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n//           Something went wrong with your signup!\n//         </Alert>\n//         <Form.Group>\n//           <Form.Label htmlFor='email'>Email</Form.Label>\n//           <Form.Control\n//             type='email'\n//             placeholder='Your email address'\n//             name='email'\n//             onChange={handleInputChange}\n//             value={userFormData.email}\n//             required\n//           />\n//           <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n//         </Form.Group>\n//         <Form.Group>\n//           <Form.Label htmlFor='password'>Password</Form.Label>\n//           <Form.Control\n//             type='password'\n//             placeholder='Your password'\n//             name='password'\n//             onChange={handleInputChange}\n//             value={userFormData.password}\n//             required\n//           />\n//           <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n//         </Form.Group>\n//         <Button\n//           disabled={!(userFormData.email && userFormData.password)}\n//           type='submit'\n//           variant='success'>\n//           Submit\n//         </Button>\n//       </Form>\n//     </>\n//   );\n// };\n// export default LoginSignup;","map":{"version":3,"sources":["/Users/aarkaiser/Desktop/Studies/UofT/assignments/23_project3/studiously/client/src/components/Home/LoginSignup/Internal/InternalLoginSignup.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState } from 'react';\n// import './LoginSignup.css';\n// import { Form, Button, Alert } from 'react-bootstrap';\n// import { createUser } from \"../../../utils/API\";\n// import Auth from '../../../utils/auth';\n\n// const LoginSignup = () => {\n//   // set initial form state\n//   const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n//   // set state for form validation\n//   const [validated] = useState(false);\n//   // set state for alert\n//   const [showAlert, setShowAlert] = useState(false);\n\n//   const handleInputChange = (event) => {\n//     const { name, value } = event.target;\n//     setUserFormData({ ...userFormData, [name]: value });\n//   };\n\n//   const handleFormSubmit = async (event) => {\n//     event.preventDefault();\n\n//     // check if form has everything (as per react-bootstrap docs)\n//     const form = event.currentTarget;\n//     if (form.checkValidity() === false) {\n//       event.preventDefault();\n//       event.stopPropagation();\n//     }\n\n//     try {\n//       const response = await createUser(userFormData);\n\n//       if (!response.ok) {\n//         throw new Error('something went wrong!');\n//       }\n      \n//       const { token, user } = await response.json();\n//       console.log(user);\n//       Auth.login(token);\n//     } catch (err) {\n//       console.error(err);\n//       setShowAlert(true);\n//     }\n\n//     setUserFormData({\n//       email: '',\n//       password: '',\n//     });\n//   };\n\n// export default function LoginSignup (props) {\n//   return (\n//     <>\n//       {/* This is needed for the validation functionality above */}\n//       <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n//         {/* show alert if server response is bad */}\n//         <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n//           Something went wrong with your signup!\n//         </Alert>\n\n//         <Form.Group>\n//           <Form.Label htmlFor='email'>Email</Form.Label>\n//           <Form.Control\n//             type='email'\n//             placeholder='Your email address'\n//             name='email'\n//             onChange={handleInputChange}\n//             value={userFormData.email}\n//             required\n//           />\n//           <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n//         </Form.Group>\n\n//         <Form.Group>\n//           <Form.Label htmlFor='password'>Password</Form.Label>\n//           <Form.Control\n//             type='password'\n//             placeholder='Your password'\n//             name='password'\n//             onChange={handleInputChange}\n//             value={userFormData.password}\n//             required\n//           />\n//           <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n//         </Form.Group>\n//         <Button\n//           disabled={!(userFormData.email && userFormData.password)}\n//           type='submit'\n//           variant='success'>\n//           Submit\n//         </Button>\n//       </Form>\n//     </>\n//   );\n// };\n\n// export default LoginSignup;"]},"metadata":{},"sourceType":"module"}