{"version":3,"sources":["utils/auth.js","components/HomeButtons.js","store.js","components/ProtectedRoute.js","pages/Home.js","utils/mutations.js","utils/queries.js","utils/is-same-day.js","pages/Goals.js","pages/Schedule.js","pages/hooks/use-graph.js","pages/Dashboard.js","components/Daily Review/ReviewButtons.js","components/Daily Review/Questions.js","pages/DailyReview.js","components/Timer/Countdown.js","components/Timer/TimerButtons.js","pages/Timer.js","components/SignupForm/SignupForm.js","utils/hooks/use-query.js","components/LoginForm/LoginForm.js","components/Navbar.js","App.js","index.js","components/Navbar.module.css"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","removeItem","window","location","assign","HomeButtons","className","to","AuthContext","createContext","loggedIn","getProfile","login","logout","AuthContextProvider","children","useState","isAuthenticated","setIsAuthenticated","context","authenticated","Provider","value","ProtectedRoute","page","useContext","exact","url","name","Home","Jumbotron","fluid","Container","src","alt","LOGIN_USER","gql","ADD_USER","SAVE_GOAL","SET_COMPLETED_GOAL","REMOVE_GOAL","QUERY_ME","isSameDay","firstDate","secondDate","year1","getFullYear","year2","month1","getMonth","month2","day1","getDate","day2","Goals","props","description","timer","userFormData","setUserFormData","useQuery","userError","loading","data","goalsToday","setGoalsToday","useMutation","saveGoal","error","removeGoal","showAlert","setShowAlert","setError","useEffect","length","me","todaysGoal","savedGoals","filter","goal","today","goalDate","dateCreated","handleFormSubmit","event","a","preventDefault","trim","duration","split","find","item","NaN","Number","variables","goalData","mutationResponse","console","log","removeGoalHandler","goalId","handleInputChange","target","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","map","onClick","bind","_id","Cal","activeStartDate","refetch","date","setDate","userData","filteredGoals","setFilteredGoals","filtrdGoals","onClickDay","tileContent","moment","format","options","responsive","plugins","legend","position","title","display","text","labels","initialGoal","datasets","label","borderColor","backgroundColor","initialTime","initialCompleted","constructDate","dateObject","year","month","getEliestDate","dates","reduce","previousDate","currentDate","isBefore","useGraph","queryData","time","completed","setData","filterGoals","goals","startingDate","isSameOrAfter","calculateAvgCompletedGoals","completedGoalsLength","Math","round","calculateAvgGoalsPerDay","timeDifference","getTime","daysDifference","floor","calculateAvgTimePerDay","timeInMinutes","prevTime","currentTime","goalsDateList","avgDailyCompletedGoals","avgWeeklyCompletedGoals","day","avgMonthlyCompletedGoals","avgAllTimeCompletedGoals","avgDailyGoals","avgWeeklyGoals","avgMonthlyGoals","avgAllTimeGoals","avgDailyGoalsTime","avgWeeklyGoalsTime","avgMonthlyGoalsTime","avgAllTimeGoalsTime","averageGoals","averageCompletedGoals","averageGoalsTime","prevState","updatedState","ChartJS","register","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","SavedGoals","style","marginBottom","ReviewButtons","Questions","setTodaysGoal","setCompletedGoal","color","DailyReview","setUserData","completedGoalHandler","Countdown","hours","minutes","seconds","startCountDown","pauseCountDown","moveToNextGoal","resetGoalTimer","paused","disabled","Timer","setGoals","durations","setDurations","timerHours","setTimerHours","timerMinutes","setTimerMinutes","timerSeconds","setTimerSeconds","setPaused","pausedTimerData","setPausedTimerData","interval","useRef","currentIndex","setCurrentIndex","allCompleted","setAllCompleted","filterdGoals","dtn","startTimer","clearInterval","countDownDate","formTimeData","timeData","dateMilliSeconds","current","setInterval","distance","prevIndex","margin","fontWeight","pausedTime","SignupForm","username","email","password","addUser","authCtx","search","useLocation","useMemo","URLSearchParams","LoginForm","query","useParamsQuery","showAuthAlert","setShowAuthAlert","fallback","get","redirectPage","AppNavbar","showModal","setShowModal","Navbar","expand","Brand","as","Link","Toggle","Collapse","id","Nav","classes","btn","Modal","size","onHide","Tab","defaultActiveKey","Header","closeButton","Item","eventKey","Body","Content","Pane","handleModalClose","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","path","component","Schedule","Dashboard","render","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.e67f7735.chunk.js","sourcesContent":["// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    // window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function HomeButtons() {\n  return (\n    <div className=\"flex justify-center space-x-10\">\n      <Link to=\"/goals\" className=\"btn-create-goals animate-bounce\">\n        Create Goals\n      </Link>\n      <Link to=\"/schedule\" className=\"btn-schedule\">\n        Your Schedule\n      </Link>\n    </div>\n  );\n}\n","import { createContext, useState } from 'react';\n// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// Create context\nconst AuthContext = createContext({\n  token: null,\n  loggedIn: () => {},\n  getProfile: () => {},\n  getToken: () => {},\n  isTokenExpired: () => {},\n  login: () => {},\n  logout: () => {},\n});\n\n// Context provider component\nconst AuthContextProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [token, setToken] = useState(null);\n\n  const login = (token) => {\n    setIsAuthenticated(true);\n    localStorage.setItem('id_token', token);\n  };\n\n  const logout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('id_token', token);\n  };\n\n  // Get token\n  const getToken = () => localStorage.getItem('id_token');\n\n  const loggedIn = () => {\n    // Checks if there is a saved token and it's still valid\n    const token = getToken();\n    const authenticated = !!token && !isTokenExpired(token); // handwaiving here\n\n    if (authenticated) {\n      setIsAuthenticated(true);\n    } else {\n      setIsAuthenticated(false);\n    }\n  };\n\n  // get user data\n  const getProfile = () => {\n    return decode(getToken());\n  };\n\n  function isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  const context = {\n    isAuthenticated,\n    token,\n    login,\n    logout,\n    loggedIn,\n    getProfile,\n  };\n\n  return (\n    <AuthContext.Provider value={context}>{children}</AuthContext.Provider>\n  );\n};\n\nexport { AuthContextProvider };\n\nexport default AuthContext;\n","import { Redirect } from 'react-router-dom';\nimport { useContext } from 'react';\nimport AuthContext from '../store';\n\nconst ProtectedRoute = ({ children, page }) => {\n  const authCtx = useContext(AuthContext);\n\n  if (!authCtx.isAuthenticated) {\n    return (\n      <Redirect\n        exact\n        to={`/login?fallback=${page.url}&&pageName=${page.name}`}\n      />\n    );\n  } else {\n    return children;\n  }\n};\n\nexport default ProtectedRoute;\n","import React, { useState, useEffect } from 'react';\nimport { Jumbotron, Container } from 'react-bootstrap';\nimport Auth from '../utils/auth';\nimport { saveGoalIds, getSavedGoalIds } from '../utils/localStorage';\nimport HomeButtons from '../components/HomeButtons';\nimport ProtectedRoute from '../components/ProtectedRoute';\n\nconst Home = () => {\n  return (\n    <>\n      <Jumbotron className=\"bg-white\" fluid>\n        <Container>\n          <img src=\"images/banner.jpg\" alt=\"banner\" className=\"banner\"></img>\n        </Container>\n      </Jumbotron>\n\n      <Container>\n        <HomeButtons />\n      </Container>\n    </>\n  );\n};\n\nexport default Home;\n","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n  mutation login($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const ADD_USER = gql`\n  mutation addUser($username: String!, $email: String!, $password: String!) {\n    addUser(username: $username, email: $email, password: $password) {\n      token\n      user {\n        _id\n        username\n      }\n    }\n  }\n`;\n\nexport const SAVE_GOAL = gql`\n  mutation saveGoal($goalData: goalInput!) {\n    saveGoal(goalData: $goalData) {\n      _id\n      username\n      email\n      savedGoals {\n        _id\n        description\n        name\n        dateCreated\n        duration\n      }\n    }\n  }\n`;\n\nexport const SET_COMPLETED_GOAL = gql`\n  mutation setCompletedGoal($goalId: ID!, $completed: String!) {\n    setCompletedGoal(goalId: $goalId, completed: $completed) {\n      _id\n      username\n      email\n      savedGoals {\n        _id\n        description\n        name\n        dateCreated\n        duration\n        completed\n      }\n    }\n  }\n`;\n\nexport const REMOVE_GOAL = gql`\n  mutation removeGoal($goalId: ID!) {\n    removeGoal(goalId: $goalId) {\n      _id\n      username\n      email\n      savedGoals {\n        _id\n        description\n        name\n      }\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const QUERY_ME = gql`\n  query me {\n    me {\n      _id\n      username\n      savedGoals {\n        _id\n        description\n        name\n        duration\n        dateCreated\n        completed\n      }\n    }\n  }\n`;\n","const isSameDay = (firstDate, secondDate) => {\n  const year1 = firstDate.getFullYear();\n  const year2 = secondDate.getFullYear();\n\n  const month1 = firstDate.getMonth();\n  const month2 = secondDate.getMonth();\n\n  const day1 = firstDate.getDate();\n  const day2 = secondDate.getDate();\n\n  const firstDateStr = `${year1}-${month1}-${day1}`;\n  const secondDateStr = `${year2}-${month2}-${day2}`;\n\n  return firstDateStr === secondDateStr;\n};\n\nexport default isSameDay;\n","import \"./Goals.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap-icons/font/bootstrap-icons.css\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport Auth from \"../utils/auth\";\nimport { SAVE_GOAL, REMOVE_GOAL } from \"../utils/mutations\";\nimport { QUERY_ME } from \"../utils/queries\";\n// import { REMOVE_GOAL } from '../utils/mutations';\n\nimport ProtectedRoute from \"../components/ProtectedRoute\";\nimport { Link } from \"react-router-dom\";\nimport isSameDay from \"../utils/is-same-day\";\n\nfunction Goals(props) {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    name: \"\",\n    description: \"\",\n    timer: \"\",\n  });\n  const { userError, loading, data } = useQuery(QUERY_ME);\n  const [goalsToday, setGoalsToday] = useState([]);\n  const [saveGoal, { error: saveGoalError }] = useMutation(SAVE_GOAL);\n  const [removeGoal, { error: removeGoalError }] = useMutation(REMOVE_GOAL);\n  const [showAlert, setShowAlert] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  // Show alert effect\n  useEffect(() => {\n    if (error.length !== 0) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  useEffect(() => {\n    if (!loading && data.me) {\n      const todaysGoal = data.me.savedGoals.filter((goal) => {\n        const today = new Date();\n        const goalDate = new Date(goal.dateCreated);\n        return isSameDay(today, goalDate);\n      });\n      setGoalsToday(todaysGoal);\n    }\n  }, [loading, data]);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const { name, description, timer } = userFormData;\n\n    // form validation\n    if (\n      name.trim().length === 0 ||\n      description.trim().length === 0 ||\n      timer.trim().length === 0\n    ) {\n      setError(\"All fields are required!\");\n      setShowAlert(true);\n      return;\n    }\n\n    const duration = timer.split(\":\");\n\n    // form validation\n    if (duration.length !== 3) {\n      setError(\"Provide the correct format on the goal duration e.g 02:30:00\");\n      setShowAlert(true);\n      return;\n    }\n\n    if (duration.find((item) => Number(item) === NaN)) {\n      setError(\"Provide the current format with only numbers\");\n      setShowAlert(true);\n      return;\n    }\n\n    try {\n      const mutationResponse = await saveGoal({\n        variables: {\n          goalData: {\n            name: userFormData.name,\n            description: userFormData.description,\n            duration: userFormData.timer,\n          },\n        },\n      });\n      setUserFormData({ name: \"\", description: \"\", timer: \"\" });\n      setGoalsToday(\n        mutationResponse.data.saveGoal.savedGoals.filter((goal) => {\n          return isSameDay(new Date(), new Date(goal.dateCreated));\n        })\n      );\n      setShowAlert(false);\n      setError(\"\");\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // Delete goal handler\n  const removeGoalHandler = async (goalId) => {\n    try {\n      const mutationResponse = await removeGoal({\n        variables: { goalId },\n      });\n      setGoalsToday(\n        mutationResponse.data.saveGoal.removeGoal.filter((goal) => {\n          return isSameDay(new Date(), new Date(goal.dateCreated));\n        })\n      );\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({\n      ...userFormData,\n      [name]: value,\n    });\n  };\n\n  return (\n    <ProtectedRoute page={{ name: \"Goals\", url: \"goals\" }}>\n      {/* This is needed for the validation functionality above */}\n      <div className=\"bg-img-goals\">\n        <Form noValidate onSubmit={handleFormSubmit}>\n          {/* show alert if server response is bad */}\n          <Alert\n            dismissible\n            onClose={() => setShowAlert(false)}\n            show={showAlert}\n            variant=\"danger\"\n          >\n            {error}\n          </Alert>\n\n          <Form.Group>\n            <Form.Label className=\"goals-title mt-12\" htmlFor=\"name\">\n              Your Goal\n            </Form.Label>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"eg: Be ready for math test.\"\n              name=\"name\"\n              onChange={handleInputChange}\n              value={userFormData.name}\n              required\n              className=\"w-96 h-12 flex m-auto\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please give you goal a name!\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label className=\"goals-title\" htmlFor=\"email\">\n              Description\n            </Form.Label>\n            <Form.Control\n              type=\"description\"\n              placeholder=\"eg: Study modules 1 and 2.\"\n              name=\"description\"\n              onChange={handleInputChange}\n              value={userFormData.description}\n              required\n              className=\"w-96 h-32 flex m-auto\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please give you goal a description!\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Form.Group>\n            <Form.Label className=\"goals-title\" htmlFor=\"timer\">\n              Goal Duration\n            </Form.Label>\n            <Form.Control\n              type=\"timer\"\n              placeholder=\"eg: 2:30:00 (HH:MM:SS).\"\n              name=\"timer\"\n              onChange={handleInputChange}\n              value={userFormData.timer}\n              required\n              className=\"w-96 h-12 flex m-auto\"\n            />\n            <Form.Control.Feedback type=\"invalid\">\n              Please give you goal a description!\n            </Form.Control.Feedback>\n          </Form.Group>\n\n          <Button\n            // disabled={!(userFormData.name && userFormData.description)}\n            type=\"submit\"\n            variant=\"success\"\n            className=\"goals-submit flex m-auto\"\n          >\n            Submit\n          </Button>\n\n          <div className=\"flex justify-center space-x-10 mt-20 mb-2\">\n            <Link to=\"/timer\" className=\"goals-srt-achieve justify-center\">\n              Start Achieving!\n            </Link>\n          </div>\n        </Form>\n\n        <div>\n          <h2>\n            <strong className=\"flex justify-center\">Your Goals</strong>\n          </h2>\n          {loading && <h2>Loading goals..</h2>}\n          {!loading && userError && <h2>Something went wrong!</h2>}\n          {goalsToday && goalsToday.length === 0 && (\n            <h1>You haven't set any goal yet.</h1>\n          )}\n          {goalsToday &&\n            goalsToday.length !== 0 &&\n            goalsToday.map((goal) => {\n              return (\n                <div\n                  className=\"card saved-goals w-2/5 flex m-auto\"\n                  key={goal._id}\n                >\n                  <li className=\"list-group-item\">\n                    <span>\n                      <button\n                        className=\"delete-goal-btn\"\n                        onClick={removeGoalHandler.bind(null, goal._id)}\n                      >\n                        🗑️\n                      </button>{\" \"}\n                      {goal.name}{\" \"}\n                    </span>\n                    <span>{goal.duration}</span>\n                  </li>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    </ProtectedRoute>\n  );\n}\n\nexport default Goals;\n","import React, { useState, useEffect } from 'react';\nimport Calendar from 'react-calendar';\nimport './Schedule.css';\nimport '../../src/index.css';\nimport ProtectedRoute from '../components/ProtectedRoute';\nimport { QUERY_ME } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\n\nconst dataMilliSeconds = (formTimeData) => {\n  const timeData = formTimeData.split(':').map((time) => +time);\n\n  let milliSeconds =\n    new Date().getTime() +\n    timeData[0] * 60 * 60 * 1000 +\n    timeData[1] * 60 * 1000 +\n    timeData[2] * 1000;\n\n  return milliSeconds;\n};\n\nconst isSameDay = (firstDate, secondDate) => {\n  const year1 = firstDate.getFullYear();\n  const year2 = secondDate.getFullYear();\n\n  const month1 = firstDate.getMonth();\n  const month2 = secondDate.getMonth();\n\n  const day1 = firstDate.getDate();\n  const day2 = secondDate.getDate();\n\n  const firstDateStr = `${year1}-${month1}-${day1}`;\n  const secondDateStr = `${year2}-${month2}-${day2}`;\n\n  return firstDateStr === secondDateStr;\n};\n\nfunction Cal(activeStartDate) {\n  const { error, loading, data, refetch } = useQuery(QUERY_ME);\n\n  const [date, setDate] = useState(new Date());\n  const [userData, setUserData] = useState(data);\n\n  // filtered goals\n  const [filteredGoals, setFilteredGoals] = useState([]);\n\n  const dateChangeHandler = (value, event) => {\n    setDate(value);\n  };\n\n  useEffect(() => {\n    refetch();\n  }, []);\n\n  useEffect(() => {\n    // Set filtered date\n    if (userData && userData.me) {\n      const filtrdGoals = userData.me.savedGoals.filter((goal) => {\n        const goalDate = new Date(goal.dateCreated);\n        const selectedDate = date;\n\n        return isSameDay(goalDate, selectedDate);\n      });\n\n      setFilteredGoals(filtrdGoals);\n    }\n\n    // console.log(date);\n  }, [date]);\n\n  return (\n    <ProtectedRoute page={{ name: 'Schedule', url: 'schedule' }}>\n      <div className=\"schedule-container\">\n        <div className=\"calendar-container\">\n          <h1>Your Schedule</h1>\n          <br />\n          <Calendar\n            // onChange={onChange}\n            value={date}\n            // Testing different Props from https://www.npmjs.com/package/react-calendar\n            // activeStartDate= {new Date(2021, 8, 1)}\n            // calendarType=\"\"\n            // defaultView=\"year\"\n            onClickDay={dateChangeHandler}\n            // showDoubleView={true}\n            // showNavigation={false}\n            tileContent=\"\"\n          />\n          <div className=\"calgoal-container\">\n            <h1>Today's Goals</h1>\n            <br />\n            <hr></hr>\n            {loading && <h2>Loading saved goals...</h2>}\n            {!loading && userData && userData.me && (\n              <ul>\n                {filteredGoals.map((goal) => {\n                  return <h2 key={goal._id}>{goal.name}</h2>;\n                })}\n              </ul>\n            )}\n          </div>\n        </div>\n      </div>\n    </ProtectedRoute>\n  );\n}\n\nexport default Cal;\n","import moment from 'moment';\n\nimport { QUERY_ME } from '../../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport { useState, useEffect } from 'react';\n\nmoment().format();\n\nconst options = {\n  responsive: true,\n  plugins: {\n    legend: {\n      position: 'top',\n    },\n    title: {\n      display: true,\n      text: 'Chart.js Line Chart',\n    },\n  },\n};\n\nconst labels = ['Daily', 'Weekly', 'Monthly', 'All Time'];\nconst initialGoal = {\n  labels,\n  datasets: [\n    {\n      label: 'Avg completed goals',\n      data: [0, 0, 0, 0],\n      borderColor: 'rgb(255, 99, 132)',\n      backgroundColor: 'rgba(255, 99, 132, 0.5)',\n    },\n  ],\n};\n\nconst initialTime = {\n  labels,\n  datasets: [\n    {\n      label: 'Avg timer per goal (in minutes)',\n      data: [0, 0, 0, 0],\n      borderColor: 'rgb(153, 102, 135)',\n      backgroundColor: 'rgba(123, 112, 125, 0.5)',\n    },\n  ],\n};\n\nconst initialCompleted = {\n  labels,\n  datasets: [\n    {\n      label: 'Avg goals daily',\n      data: [0, 0, 0, 0],\n      borderColor: 'rgb(53, 162, 235)',\n      backgroundColor: 'rgba(53, 162, 235, 0.5)',\n    },\n  ],\n};\n\n// YYYY-MM-DD\nconst constructDate = (dateObject, format) => {\n  const year = dateObject.getFullYear();\n  const month = dateObject.getMonth();\n  const date = dateObject.getDate();\n\n  if (format === 'DD-MM-YYYY') {\n    return `${date}-${month + 1}-${year}`;\n  }\n\n  return `${year}-${month + 1}-${date}`;\n};\n\n// Get the earliest date from a list of dates\nconst getEliestDate = (dates) => {\n  const constructedDate = dates.map((date) => constructDate(date));\n  return constructedDate.reduce(function (previousDate, currentDate) {\n    return moment(currentDate).isBefore(previousDate)\n      ? currentDate\n      : previousDate;\n  });\n};\n\nconst useGraph = () => {\n  const { loading, error, data: queryData } = useQuery(QUERY_ME);\n\n  // const [data, setData] = useState(initialData);\n  const [data, setData] = useState({\n    goal: initialGoal,\n    time: initialTime,\n    completed: initialCompleted,\n  });\n\n  const filterGoals = (goals, startingDate) => {\n    return goals.filter((goal) => {\n      const goalDate = constructDate(new Date(goal.dateCreated));\n      return moment(goalDate).isSameOrAfter(constructDate(startingDate));\n    });\n  };\n\n  // Calculate average goals\n  const calculateAvgCompletedGoals = (goals) => {\n    const completedGoalsLength = goals.filter(\n      (goal) => goal.completed === true\n    ).length;\n    return Math.round(completedGoalsLength / goals.length);\n  };\n\n  // Calculate averge number of goals per day\n  const calculateAvgGoalsPerDay = (goals, startingDate) => {\n    const filteredGoals = filterGoals(goals, startingDate);\n    const timeDifference = new Date().getTime() - startingDate.getTime();\n    let daysDifference = Math.floor(timeDifference / (1000 * 3600 * 24));\n    if (daysDifference === 0) {\n      daysDifference = 1;\n    }\n    return Math.round(filteredGoals.length / daysDifference);\n  };\n\n  // Calculate average minute per goal\n  const calculateAvgTimePerDay = (goals, startingDate) => {\n    const filteredGoals = filterGoals(goals, startingDate);\n    const timeDifference = new Date().getTime() - startingDate.getTime();\n    let daysDifference = Math.floor(timeDifference / (1000 * 3600 * 24));\n    if (daysDifference === 0) {\n      daysDifference = 1;\n    }\n\n    const times = filteredGoals.map((goal) => goal.duration.split(':'));\n    let newTimes = times.map((time) => {\n      const hoursToMilliseconds = +time[0] * (1000 * 3600);\n      const minutesToMilliseconds = +time[1] * (1000 * 60);\n      const secondsToMilliseconds = +time[2] * 1000;\n      return [\n        hoursToMilliseconds,\n        minutesToMilliseconds,\n        secondsToMilliseconds,\n      ];\n    });\n\n    const joinedTimes = newTimes.map((time) => {\n      return time[0] + time[1] + time[2];\n    });\n\n    const timeInMilliseconds = joinedTimes.reduce((prevTime, currentTime) => {\n      return prevTime + currentTime;\n    });\n    const timeInMinutes = timeInMilliseconds / (1000 * 60);\n\n    return Math.round(timeInMinutes / daysDifference);\n  };\n\n  useEffect(() => {\n    if (queryData && queryData.me) {\n      const goals = queryData.me.savedGoals;\n      const goalsDateList = goals.map((goal) => new Date(goal.dateCreated));\n\n      // CALCULATE AVERAGE COMPLETED GOALS\n      // avg daily completed goals\n      const avgDailyCompletedGoals = calculateAvgCompletedGoals(\n        filterGoals(goals, new Date())\n      );\n      // avg weekly completed goals\n      const avgWeeklyCompletedGoals = calculateAvgCompletedGoals(\n        filterGoals(goals, new Date(moment().day(-7)))\n      );\n\n      // avg monthly completed goals\n      const avgMonthlyCompletedGoals = calculateAvgCompletedGoals(\n        filterGoals(goals, new Date(moment().day(-31)))\n      );\n\n      // avg all time completed goals\n      const avgAllTimeCompletedGoals = calculateAvgCompletedGoals(\n        filterGoals(goals, new Date('1970-01-01'))\n      );\n\n      // Calculate average number of goals per day\n      // day\n      const avgDailyGoals = calculateAvgGoalsPerDay(goals, new Date());\n\n      // week\n      const avgWeeklyGoals = calculateAvgGoalsPerDay(\n        goals,\n        new Date(moment().day(-7))\n      );\n\n      // month\n      const avgMonthlyGoals = calculateAvgGoalsPerDay(\n        goals,\n        new Date(moment().day(-31))\n      );\n\n      // alltime\n      const avgAllTimeGoals = calculateAvgGoalsPerDay(\n        goals,\n        new Date(new Date(getEliestDate(goalsDateList)))\n      );\n\n      // Calculate average time spend per goal\n      // day\n      const avgDailyGoalsTime = calculateAvgTimePerDay(goals, new Date());\n\n      // week\n      const avgWeeklyGoalsTime = calculateAvgTimePerDay(\n        goals,\n        new Date(moment().day(-7))\n      );\n\n      // month\n      const avgMonthlyGoalsTime = calculateAvgTimePerDay(\n        goals,\n        new Date(moment().day(-31))\n      );\n\n      // alltime\n      const avgAllTimeGoalsTime = calculateAvgTimePerDay(\n        goals,\n        new Date(getEliestDate(goalsDateList))\n      );\n\n      const averageGoals = [\n        avgDailyGoals,\n        avgWeeklyGoals,\n        avgMonthlyGoals,\n        avgAllTimeGoals,\n      ];\n\n      const averageCompletedGoals = [\n        avgDailyCompletedGoals,\n        avgWeeklyCompletedGoals,\n        avgMonthlyCompletedGoals,\n        avgAllTimeCompletedGoals,\n      ];\n\n      const averageGoalsTime = [\n        avgDailyGoalsTime,\n        avgWeeklyGoalsTime,\n        avgMonthlyGoalsTime,\n        avgAllTimeGoalsTime,\n      ];\n\n      // console.log(averageCompletedGoals);\n      // console.log(averageGoals);\n      // console.log(averageGoalsTime);\n\n      setData((prevState) => {\n        const updatedState = { ...prevState };\n        updatedState.goal.datasets[0].data = averageGoals;\n        updatedState.time.datasets[0].data = averageGoalsTime;\n        updatedState.completed.datasets[0].data = averageCompletedGoals;\n        return updatedState;\n      });\n    }\n  }, [queryData]);\n\n  return { data, options };\n};\n\nexport default useGraph;\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport './Dashboard.css';\nimport ProtectedRoute from '../components/ProtectedRoute';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport useGraph from './hooks/use-graph';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  PointElement,\n  LineElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nconst SavedGoals = () => {\n  const {\n    data: { time, completed, goal },\n    options,\n  } = useGraph();\n\n  return (\n    <ProtectedRoute page={{ name: 'Dashboard', url: 'dashboard' }}>\n      <Container style={{ marginBottom: '2rem' }}>\n        <Line options={options} data={goal} />\n      </Container>\n      <Container style={{ marginBottom: '2rem' }}>\n        <Line options={options} data={completed} />\n      </Container>\n      <Container style={{ marginBottom: '2rem' }}>\n        <Line options={options} data={time} />\n      </Container>\n    </ProtectedRoute>\n  );\n};\n\nexport default SavedGoals;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function ReviewButtons() {\n  return (\n    <div>\n      <Link\n        to=\"/dashboard\"\n        className=\"bg-gray-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded bottom-1 justify-start\"\n      >\n        View Goal Data\n      </Link>\n      <Link\n        to=\"/goals\"\n        className=\"content-end bg-gray-600 blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded -bottom-1 justify-end\"\n      >\n        Add More Goals\n      </Link>\n    </div>\n  );\n}\n","import React, { Fragment, useEffect, useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nconst isSameDay = (firstDate, secondDate) => {\n  const year1 = firstDate.getFullYear();\n  const year2 = secondDate.getFullYear();\n\n  const month1 = firstDate.getMonth();\n  const month2 = secondDate.getMonth();\n\n  const day1 = firstDate.getDate();\n  const day2 = secondDate.getDate();\n\n  const firstDateStr = `${year1}-${month1}-${day1}`;\n  const secondDateStr = `${year2}-${month2}-${day2}`;\n\n  return firstDateStr === secondDateStr;\n};\n\nfunction Questions(props) {\n  const [todaysGoal, setTodaysGoal] = useState();\n\n  useEffect(() => {\n    if (props.userData && props.userData.me) {\n      const today = new Date();\n      const filteredGoals = props.userData.me.savedGoals.filter((goal) => {\n        return isSameDay(today, new Date(goal.dateCreated));\n      });\n      setTodaysGoal(filteredGoals);\n    }\n  }, [props]);\n\n  return (\n    <>\n      {todaysGoal &&\n        todaysGoal.map((goal) => {\n          return (\n            <Fragment key={goal._id}>\n              <Container>\n                <h2>{goal.name} ?</h2>\n                {goal.completed !== true && goal.completed !== false && (\n                  <>\n                    <button\n                      className=\"btn-complete\"\n                      onClick={props.setCompletedGoal.bind(\n                        null,\n                        goal._id,\n                        'yes'\n                      )}\n                    >\n                      Yes\n                    </button>\n                    <br />\n                    <button\n                      className=\"btn-complete\"\n                      onClick={props.setCompletedGoal.bind(\n                        null,\n                        goal._id,\n                        'no'\n                      )}\n                    >\n                      No\n                    </button>{' '}\n                  </>\n                )}\n                {goal.completed && (\n                  <>\n                    <h3 style={{ color: 'green' }}>Goal completed</h3>\n                    <button\n                      className=\"btn-complete\"\n                      onClick={props.setCompletedGoal.bind(\n                        null,\n                        goal._id,\n                        'reset'\n                      )}\n                    >\n                      Reset goal\n                    </button>\n                  </>\n                )}\n                {goal.completed === false && (\n                  <>\n                    <h3 style={{ color: 'red' }}>Unable to complete goal</h3>\n                    <button\n                      className=\"btn-complete\"\n                      onClick={props.setCompletedGoal.bind(\n                        null,\n                        goal._id,\n                        'reset'\n                      )}\n                    >\n                      Reset goal\n                    </button>\n                  </>\n                )}\n                {/* {iscompletedGoal(goal._id)}\n                {isUncompletedGoal(goal._id)} */}\n              </Container>\n              <br />\n            </Fragment>\n          );\n        })}\n    </>\n  );\n}\n\nexport default Questions;\n","import React, { useState, useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { getMe } from '../utils/API';\nimport Auth from '../utils/auth';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { SET_COMPLETED_GOAL } from '../utils/mutations';\n\nimport ReviewButtons from '../components/Daily Review/ReviewButtons';\nimport Questions from '../components/Daily Review/Questions';\n// import { GET_GOAL } from '../utils/mutations'\n\nimport ProtectedRoute from '../components/ProtectedRoute';\n\nconst DailyReview = () => {\n  const [userData, setUserData] = useState([]);\n\n  const { loading, error: queryError, data } = useQuery(QUERY_ME);\n  const [setCompletedGoal, { error: mutationError }] =\n    useMutation(SET_COMPLETED_GOAL);\n\n  const completedGoalHandler = async (goalId, completed) => {\n    try {\n      const mutationResponse = await setCompletedGoal({\n        variables: { goalId, completed },\n      });\n      setUserData(mutationResponse.data.setCompletedGoal);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  useEffect(() => {\n    setUserData(data);\n  }, [data]);\n\n  return (\n    <ProtectedRoute page={{ name: 'Daily Review', url: 'dailyreview' }}>\n      <Container className=\"daily-review\">\n        <h1>DAILY REVIEW</h1>\n        <br />\n        <h2>Congratulations on completing a productive day!🎉</h2>\n        <br />\n        <h2>Were you able to achieve your goals today?</h2>\n      </Container>\n      <br />\n\n      <Container>\n        <Questions\n          userData={userData}\n          setCompletedGoal={completedGoalHandler}\n        />\n      </Container>\n      <br />\n\n      <Container>\n        <ReviewButtons />\n      </Container>\n    </ProtectedRoute>\n  );\n};\n\nexport default DailyReview;\n","import React, { useEffect, useState } from 'react';\n\nconst dummyTime = '1:20:3'.split(':').map((time) => +time);\n\nfunction Countdown({ hours, minutes, seconds }) {\n  return (\n    <div>\n      {/* {timerComponents.length ? timerComponents : <span>Time's up!</span>} */}\n      <h3>Hours: {hours}</h3>\n      <h3>Minutes: {minutes}</h3>\n      <h3>Seeconds: {seconds}</h3>\n    </div>\n  );\n}\n\nexport default Countdown;\n","import React from 'react';\n\nexport default function ReviewButtons({\n  startCountDown,\n  pauseCountDown,\n  moveToNextGoal,\n  resetGoalTimer,\n  paused,\n}) {\n  return (\n    <div className=\"flex justify-center space-x-10\">\n      <button\n        className=\"bg-gray-600 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded bottom-1 justify-start\"\n        onClick={!paused ? pauseCountDown : startCountDown}\n      >\n        {!paused ? 'Pause' : 'Resume'}\n      </button>\n      <button\n        onClick={resetGoalTimer}\n        className=\"content-end bg-gray-600 blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded -bottom-1 justify-end\"\n        disabled\n      >\n        Restart\n      </button>\n      <button\n        onClick={moveToNextGoal}\n        className=\"content-end bg-gray-600 blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded -bottom-1 justify-end\"\n        disabled\n      >\n        Next Goal\n      </button>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Container } from 'react-bootstrap';\nimport Countdown from '../components/Timer/Countdown';\nimport TimerButtons from '../components/Timer/TimerButtons.js';\nimport ProtectedRoute from '../components/ProtectedRoute';\nimport { QUERY_ME } from '../utils/queries';\nimport { useQuery } from '@apollo/client';\nimport { Redirect } from 'react-router-dom';\nimport isSameDay from '../utils/is-same-day';\n\nconst dateMilliSeconds = (formTimeData) => {\n  const timeData = formTimeData.split(':').map((time) => +time);\n\n  let milliSeconds =\n    new Date().getTime() +\n    timeData[0] * 60 * 60 * 1000 +\n    timeData[1] * 60 * 1000 +\n    timeData[2] * 1000;\n\n  return milliSeconds;\n};\n\nconst Timer = () => {\n  const [goals, setGoals] = useState(null);\n  const [durations, setDurations] = useState([]);\n\n  const { loading, error, data } = useQuery(QUERY_ME);\n\n  // Times\n  const [timerHours, setTimerHours] = useState('00');\n  const [timerMinutes, setTimerMinutes] = useState('00');\n  const [timerSeconds, setTimerSeconds] = useState('00');\n\n  const [paused, setPaused] = useState(false);\n  const [pausedTimerData, setPausedTimerData] = useState(null);\n  let interval = useRef();\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  const [allCompleted, setAllCompleted] = useState(false);\n  // const [dummyTime, setDummyTime] = useState(['00:00:15', '00:00:30']);\n\n  // Set users goals\n  useEffect(() => {\n    if (data && data.me) {\n      const today = new Date();\n      const filterdGoals = data.me.savedGoals.filter((goal) => {\n        return isSameDay(today, new Date(goal.dateCreated));\n      });\n      const dtn = filterdGoals.map((goal) => goal.duration);\n      setDurations(dtn);\n      setGoals(filterdGoals);\n    }\n  }, [data]);\n\n  const startTimer = () => {\n    clearInterval(interval);\n\n    const countDownDate = new Date(\n      dateMilliSeconds(\n        pausedTimerData ? pausedTimerData : durations[currentIndex]\n      )\n    ).getTime();\n\n    interval.current = setInterval(() => {\n      const now = new Date().getTime();\n      const distance = countDownDate - now;\n\n      const hours = Math.floor(\n        (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n      );\n      const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));\n      const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n      if (distance < 0) {\n        // stop the timer and on move to the next goal if any\n        clearInterval(interval.current);\n        if (durations[currentIndex + 1]) {\n          setCurrentIndex((prevIndex) => prevIndex + 1);\n        } else {\n          setAllCompleted(true);\n        }\n      } else {\n        setTimerHours(hours);\n        setTimerMinutes(minutes);\n        setTimerSeconds(seconds);\n      }\n    }, 1000);\n  };\n\n  // start counter\n  const startCountDown = () => {\n    const pausedTime = pausedTimerData.split(':').map((time) => +time);\n    // set paused times\n    setTimerHours(pausedTime[0]);\n    setTimerMinutes(pausedTime[1]);\n    setTimerSeconds(pausedTime[2]);\n\n    setPausedTimerData(null);\n    setPaused(false);\n    startTimer();\n  };\n\n  // pause counter\n  const pauseCountDown = () => {\n    console.log(`${timerHours}:${timerMinutes}:${timerSeconds}`);\n    clearInterval(interval.current);\n    setPausedTimerData(`${timerHours}:${timerMinutes}:${timerSeconds}`);\n    setPaused(true);\n  };\n\n  // Move to next goal\n  const moveToNextGoal = () => {\n    clearInterval(interval);\n    if (durations[currentIndex + 1]) {\n      setCurrentIndex((prevIndex) => prevIndex + 1);\n    }\n  };\n\n  // Reset goal\n  const resetGoalTimer = () => {\n    clearInterval(interval);\n    startTimer();\n  };\n\n  useEffect(() => {\n    if (durations.length !== 0) {\n      startTimer();\n    }\n    return () => {\n      clearInterval(interval);\n    };\n  }, [currentIndex, durations]);\n\n  if (allCompleted) {\n    return <Redirect to=\"/dailyreview\" />;\n  }\n\n  return (\n    <ProtectedRoute page={{ name: 'Timer', url: 'timer' }}>\n      <Container>\n        <h1>Timer</h1>\n      </Container>\n      <Container>\n        <h2 style={{ margin: '1rem' }}>\n          <span style={{ fontWeight: 'bold' }}>\n            {goals && goals[currentIndex].name}\n          </span>\n          , you get a 15 mins break.\n        </h2>\n      </Container>\n\n      <Countdown\n        hours={timerHours}\n        minutes={timerMinutes}\n        seconds={timerSeconds}\n      />\n      <br />\n      <TimerButtons\n        startCountDown={startCountDown}\n        pauseCountDown={pauseCountDown}\n        moveToNextGoal={moveToNextGoal}\n        resetGoalTimer={resetGoalTimer}\n        paused={paused}\n      />\n    </ProtectedRoute>\n  );\n};\n\nexport default Timer;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../../utils/auth';\nimport { ADD_USER } from '../../utils/mutations';\nimport { Redirect } from 'react-router-dom';\nimport AuthContext from '../../store';\n\nfunction SignupForm(props) {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({\n    username: '',\n    email: '',\n    password: '',\n  });\n  const [addUser, { error }] = useMutation(ADD_USER);\n  const [showAlert, setShowAlert] = useState(false);\n\n  const authCtx = useContext(AuthContext);\n\n  // Alert effect\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  // Signup submit handler\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    const mutationResponse = await addUser({\n      variables: {\n        username: userFormData.username,\n        email: userFormData.email,\n        password: userFormData.password,\n      },\n    });\n\n    const token = mutationResponse.data.addUser.token;\n    authCtx.login(token);\n  };\n\n  // Inputs change handler\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({\n      ...userFormData,\n      [name]: value,\n    });\n  };\n\n  // Check if user is authenticated\n  if (authCtx.isAuthenticated) {\n    return <Redirect to=\"/\" />;\n  }\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate onSubmit={handleFormSubmit} className=\"form\">\n        {/* show alert if server response is bad */}\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your signup!\n        </Alert>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"username\">Username</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your username\"\n            name=\"username\"\n            onChange={handleInputChange}\n            value={userFormData.username}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Username is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            placeholder=\"Your email address\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={\n            !(\n              userFormData.username &&\n              userFormData.email &&\n              userFormData.password\n            )\n          }\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default SignupForm;\n","import { useLocation } from 'react-router-dom';\nimport { useMemo } from 'react';\n\nfunction useQuery() {\n  const { search } = useLocation();\n\n  return useMemo(() => new URLSearchParams(search), [search]);\n}\n\nexport default useQuery;\n","// see SignupForm.js for comments\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport Auth from '../../utils/auth';\nimport { useMutation } from '@apollo/client';\nimport { LOGIN_USER } from '../../utils/mutations';\nimport { Redirect } from 'react-router-dom';\nimport AuthContext from '../../store';\nimport useParamsQuery from '../../utils/hooks/use-query';\n\nfunction LoginForm() {\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  const [login, { error }] = useMutation(LOGIN_USER);\n  const query = useParamsQuery();\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  // Authentication required error\n  const [showAuthAlert, setShowAuthAlert] = useState(false);\n  const fallback = query.get('fallback');\n\n  useEffect(() => {\n    if (fallback) {\n      setShowAuthAlert(true);\n    }\n  }, [fallback]);\n\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error]);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const mutationResponse = await login({\n        variables: {\n          email: userFormData.email,\n          password: userFormData.password,\n        },\n      });\n      const token = mutationResponse.data.login.token;\n      authCtx.login(token);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({\n      ...userFormData,\n      [name]: value,\n    });\n  };\n\n  if (authCtx.isAuthenticated) {\n    const redirectPage = query.get('fallback') ? query.get('fallback') : '';\n    return <Redirect to={`/${redirectPage}`} />;\n  }\n\n  return (\n    <>\n      <Form noValidate onSubmit={handleFormSubmit} className=\"form\">\n        <Alert\n          dismissible\n          onClose={() => setShowAlert(false)}\n          show={showAlert}\n          variant=\"danger\"\n        >\n          Something went wrong with your login credentials!\n        </Alert>\n        <Alert\n          variant=\"danger\"\n          show={showAuthAlert}\n          onClose={() => setShowAuthAlert(false)}\n          dismissible\n        >\n          Login in to access {query.get('pageName')} page\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor=\"email\">Email</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Your email\"\n            name=\"email\"\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Email is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor=\"password\">Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            placeholder=\"Your password\"\n            name=\"password\"\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type=\"invalid\">\n            Password is required!\n          </Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type=\"submit\"\n          variant=\"success\"\n        >\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n}\n\nexport default LoginForm;\n","import React, { useState, useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from './SignupForm/SignupForm';\nimport LoginForm from './LoginForm/LoginForm';\nimport classes from './Navbar.module.css';\n\nimport Auth from '../utils/auth';\nimport AuthContext from '../store';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  const authCtx = useContext(AuthContext);\n\n  return (\n    <>\n      <Navbar className=\"navbar-style\" variant=\"white\" expand=\"lg\">\n        <Container fluid>\n          <Navbar.Brand as={Link} to=\"/\">\n            <img src=\"images/StudyLogo.png\" alt=\"logo\" className=\"logo\"></img>\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"navbar\" />\n          <Navbar.Collapse id=\"navbar\">\n            <Nav className=\"ml-auto\">\n              {/* if user is logged in show saved goals and logout */}\n              {authCtx.isAuthenticated ? (\n                <>\n                  <Nav.Link as={Link} to=\"/dashboard\" className=\"nav-link\">\n                    Dashboard\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/goals\" className=\"nav-link\">\n                    Goals\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/schedule\" className=\"nav-link\">\n                    Schedule\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/dailyreview\" className=\"nav-link\">\n                    Daily Review\n                  </Nav.Link>\n                  <Nav.Link as={Link} to=\"/timer\">\n                    Timer\n                  </Nav.Link>\n\n                  <Nav.Link onClick={authCtx.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <>\n                  <Link to=\"/login\" className={classes.btn}>\n                    Login\n                  </Link>\n                  <Link to=\"/signup\" className={classes.btn}>\n                    Sign Up\n                  </Link>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size=\"lg\"\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby=\"signup-modal\"\n      >\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey=\"login\">\n          <Modal.Header closeButton>\n            <Modal.Title id=\"signup-modal\">\n              <Nav variant=\"pills\">\n                <Nav.Item>\n                  <Nav.Link eventKey=\"login\">Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey=\"signup\">Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey=\"login\">\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey=\"signup\">\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;\n","import React, { useEffect, useContext } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home';\nimport Goals from './pages/Goals';\nimport Schedule from './pages/Schedule';\nimport Dashboard from './pages/Dashboard';\nimport DailyReview from './pages/DailyReview';\nimport Timer from './pages/Timer';\nimport SignupForm from './components/SignupForm/SignupForm';\nimport LoginForm from './components/LoginForm/LoginForm';\nimport AuthContext from './store';\n\nimport Navbar from './components/Navbar';\n\nimport {\n  ApolloProvider,\n  InMemoryCache,\n  ApolloClient,\n  createHttpLink,\n} from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst httpLink = createHttpLink({\n  uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  };\n});\n\nconst client = new ApolloClient({\n  link: authLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nfunction App() {\n  const authCtx = useContext(AuthContext);\n\n  useEffect(() => {\n    authCtx.loggedIn();\n  }, []);\n\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <Navbar />\n        <div className=\"layout\">\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route exact path=\"/goals\" component={Goals} />\n            <Route exact path=\"/schedule\" component={Schedule} />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/dailyreview\" component={DailyReview} />\n            <Route exact path=\"/timer\" component={Timer} />\n            <Route exact path=\"/signup\" component={SignupForm} />\n            <Route exact path=\"/login\" component={LoginForm} />\n            <Route render={() => <h1 className=\"display-2\">Wrong page!</h1>} />\n          </Switch>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport { AuthContextProvider } from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Navbar_btn__37FVO\"};"],"sourceRoot":""}