{"version":3,"sources":["components/Home/Navbar/Navbar.js","components/Home/LoginSignup/Facebook/FacebookLogin.js","components/Home/LoginSignup/Google/GoogleLogin.js","components/Home/LoginSignup/Google/GoogleLogout.js","utils/auth.js","components/Home/LoginSignup/Internal/InternalLoginSignup.js","utils/API.js","components/Home/LoginSignup/LoginSignup.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","Login","useState","login","setLogin","data","setData","picture","setPicture","class","Card","style","width","Header","appId","autoLoad","fields","scope","callback","response","console","log","url","accessToken","icon","Image","src","roundedCircle","Body","Title","name","Text","email","clientID","buttonText","onSuccess","res","profileObj","onFailure","cookiePolicy","marginTop","isSignedIn","Logout","clientId","onLogoutSuccess","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","LoginSignup","password","userFormData","setUserFormData","validated","showAlert","setShowAlert","handleInputChange","event","target","value","handleFormSubmit","a","preventDefault","currentTarget","checkValidity","stopPropagation","userData","fetch","method","headers","body","JSON","stringify","ok","Error","json","user","Auth","error","Form","noValidate","onSubmit","Alert","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","Home","FacebookLogin","GoogleLogin","GoogleLogout","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5d3816f3.chunk.js","sourcesContent":["export default function Navbar(props) {\n    return (\n        <div className='navbar-container'>\n            <h1>[This will be the navbar]</h1>\n        </div>\n    )};","import React, { useState } from 'react';\nimport FacebookLogin from 'react-facebook-login';\nimport { Card, Image } from 'react-bootstrap';\n\nfunction Login() {\n\n  const [login, setLogin] = useState(false);\n  const [data, setData] = useState({});\n  const [picture, setPicture] = useState('');\n\n  const responseFacebook = (response) => {\n    console.log(response);\n    setData(response);\n    setPicture(response.picture.data.url);\n    if (response.accessToken) {\n      setLogin(true);\n    } else {\n      setLogin(false);\n    }\n  }\n\n  return (\n    <div class=\"container\">\n      <Card style={{ width: '600px' }}>\n        <Card.Header>\n          {!login &&\n            <FacebookLogin\n              appId=\"921201001964201\"\n              autoLoad={true}\n              fields=\"name,email,picture\"\n              scope=\"public_profile,user_friends\"\n              callback={responseFacebook}\n              icon=\"fa-facebook\" />\n          }\n          {login &&\n            <Image src={picture} roundedCircle />\n          }\n        </Card.Header>\n        {login &&\n          <Card.Body>\n            <Card.Title>{data.name}</Card.Title>\n            <Card.Text>\n              {data.email}\n            </Card.Text>\n          </Card.Body>\n        }\n      </Card>\n    </div>\n  );\n}\n\nexport default Login;","import React from 'react';\nimport { GoogleLogin } from 'react-google-login';\n\nconst clientId = `660110466067-69udlgbrcl25a39sc1uhujv79kco4hak.apps.googleusercontent.com`\n\nfunction Login() {\n    const onSuccess = (res) => {\n        console.log(`[Google Login Success] currentUser:`, res.profileObj);\n    };\n    const onFailure = (res) => {\n        console.log(`[Google Login Failed] res`, res);\n    };\n\n    return <div>\n        <GoogleLogin\n        clientID={clientId}\n        buttonText=\"Login\"\n        onSuccess={onSuccess}\n        onFailure={onFailure}\n        cookiePolicy={`single_host_origin`}\n        style={{ marginTop: '100px'}}\n        isSignedIn={true}\n        />\n    </div>    \n }\n\n export default Login;","import React from 'react';\nimport { GoogleLogout } from 'react-google-login';\n\n\nconst clientId = `660110466067-69udlgbrcl25a39sc1uhujv79kco4hak.apps.googleusercontent.com`\n\nfunction Logout() {\n    const onSuccess = () => {\n        console.log(`[Logged out of Google successfully!]`);\n    };\n\n    return (\n        <div>\n            <GoogleLogout\n            clientId = {clientId}\n            buttonText=\"Logout\"\n            onLogoutSuccess={onSuccess}\n            ></GoogleLogout>       \n        </div>\n    );\n}\nexport default Logout;\n\n","// use this to decode a token and get the user's information out of it\nimport decode from 'jwt-decode';\n\n// create a new class to instantiate for a user\nclass AuthService {\n  // get user data\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  // check if user's logged in\n  loggedIn() {\n    // Checks if there is a saved token and it's still valid\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token); // handwaiving here\n  }\n\n  // check if token is expired\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    // Retrieves the user token from localStorage\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    // Saves user token to localStorage\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    // Clear user token and profile data from localStorage\n    localStorage.removeItem('id_token');\n    // this will reload the page and reset the state of the application\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport './InternalLoginSignup.css';\nimport { Form, Button, Alert } from 'react-bootstrap';\nimport { createUser } from \"../../../../utils/API\";\nimport Auth from '../../../../utils/auth';\n\nconst LoginSignup = () => {\n  // set initial form state\n  const [userFormData, setUserFormData] = useState({ email: '', password: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setUserFormData({ ...userFormData, [name]: value });\n  };\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    try {\n      const response = await createUser(userFormData);\n      if (!response.ok) {\n        throw new Error('something went wrong!');\n      }\n      const { token, user } = await response.json();\n      console.log(user);\n      Auth.login(token);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n    setUserFormData({\n      email: '',\n      password: '',\n    });\n  };\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your signup!\n        </Alert>\n        <Form.Group>\n          <Form.Label htmlFor='email'>Email</Form.Label>\n          <Form.Control\n            type='email'\n            placeholder='Your email address'\n            name='email'\n            onChange={handleInputChange}\n            value={userFormData.email}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Form.Group>\n          <Form.Label htmlFor='password'>Password</Form.Label>\n          <Form.Control\n            type='password'\n            placeholder='Your password'\n            name='password'\n            onChange={handleInputChange}\n            value={userFormData.password}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Password is required!</Form.Control.Feedback>\n        </Form.Group>\n        <Button\n          disabled={!(userFormData.email && userFormData.password)}\n          type='submit'\n          variant='success'>\n          Submit\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default LoginSignup;","// route to get logged in user's info (needs the token)\nexport const getMe = (token) => {\n    return fetch('/api/users/me', {\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \n  export const createUser = (userData) => {\n    return fetch('/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  export const loginUser = (userData) => {\n    return fetch('/api/users/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(userData),\n    });\n  };\n  \n  // save goal data for a logged in user\n  export const saveGoal = (goalData, token) => {\n    return fetch('/api/users', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n        authorization: `Bearer ${token}`,\n      },\n      body: JSON.stringify(goalData),\n    });\n  };\n  \n  // remove saved goal data for a logged in user\n  export const deleteGoal = (goalId, token) => {\n    return fetch(`/api/users/goals/${goalId}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: `Bearer ${token}`,\n      },\n    });\n  };\n  \n//   // make a search to google books api\n//   export const searchGoogleBooks = (query) => {\n//     return fetch(`https://www.googleapis.com/books/v1/volumes?q=${query}`);\n//   };","import FacebookLogin from \"./Facebook/FacebookLogin\";\nimport GoogleLogin from \"./Google/GoogleLogin\";\nimport GoogleLogout from \"./Google/GoogleLogout\";\nimport LoginSignup from \"./Internal/InternalLoginSignup\"\n\nexport default function Home(props) {\n    return (\n        <div className='home-container'>\n            <p>Signin/Signup Test Environment</p>\n            <p>Facebook Login</p>\n            <FacebookLogin />\n            <p>Google Login</p>\n            <GoogleLogin />\n            <p>Google Logout</p>\n            <GoogleLogout />\n            <p>Internal</p>\n            <LoginSignup />\n        </div>\n    )}","import React from \"react\"\nimport './Home.css'\nimport Navbar from \"./Navbar/Navbar\";\nimport LoginSignup from \"./LoginSignup/LoginSignup\";\n\nexport default function Home(props) {\n    return (\n        <div className='home-container'>\n            <Navbar />\n            <p>*********************************</p>\n\n            \n            <h2>Home Works!</h2>\n\n            <p>*********************************</p>\n            <h3>Test Environment for Logins</h3>\n            <LoginSignup />\n            <p>*********************************</p>\n        </div>\n    )}","import './App.css';\nimport Home from \"../src/components/Home/Home\"\n// import LoginSignup from \"../src/components/Home/LoginSignup/LoginSignup\"\n\nfunction App() {\n  return (\n    <div>\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}